---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

const braums = await getCollection("braum")
---

<script>
  const observer = new IntersectionObserver((entries) =>
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("animate-in-end");
        entry.target.classList.remove("animate-in-start");
      } else {
        entry.target.classList.add("animate-in-start");
        entry.target.classList.remove("animate-in-end");
      }
    })
  );

  document
    .querySelectorAll("[data-animate-in]")
    .forEach((element) => observer.observe(element));
</script>

<Layout title="Only Braums">
	<div class="h-full grid grid-rows-header-footer">
		<header data-animate-in class:list={[
			"animate-in-start duration-700 transition",
			"container px-4 py-4 flex flex-col gap-4",
		]}>
			<h1 class="font-header text-accent text-4xl">
				Only Braums {"<3"}
			</h1>
			<h2 class="font-header text-black-nearly text-2xl">
				Find your next adventureâ€¦ your next Braum
			</h2>
		</header>

		<main class="container max-w-3xl flex flex-col items-center text-black px-4 py-8">
			{braums.map((braum, i) => (
				<div
					data-animate-in
					class:list={[
						"animate-in-start duration-700 transition",
						"w-full flex gap-4 py-6",
						i % 2 === 0 ? "flex-col md:flex-row" : "flex-col md:flex-row-reverse",
					]}
				>
					<img
						class="w-48 h-48"
						src={braum.data.image}
						alt={braum.data.name}
					/>
					<div class:list={[
						"flex-1 flex flex-col gap-4",
						i % 2 === 0 ? "items-start" : "md:items-end",
					]}>
						<h3 class:list={[
							"font-header text-black-nearly text-3xl",
							i % 2 === 0 ? "text-start" : "md:text-end"
						]}>{braum.data.name}</h3>
						<p class:list={[
							"text-xl",
							i % 2 === 0 ? "text-start" : "md:text-end"
						]}>
							{braum.data.teaser}
						</p>
						<div class:list={[
							"flex flex-wrap gap-1 font-semibold text-xl",
							i % 2 === 0 ? "justify-start" : "md:justify-end"
						]}>
							{braum.data.tags?.map(tag => (
								<p class:list={[
									braum.slug === "4-zac" ? "bg-green-700" : "bg-black-nearly",
									"px-3 py-0.5 text-white rounded-full"
								]}>{tag}</p>
							))}	
						</div>
					</div>
				</div>
			))}
		</main>

		<footer class="bg-black-nearly text-white">
			<div class="container px-4 py-8 flex flex-row">
				<h2 class="flex-1 font-header text-3xl">That's all the Braums for now, check back frequently for more Braums.</h2>
				<a class="text-accent-light text-2xl underline" href="/careers">Careers</a>
			</div>
		</footer>
	</div>
</Layout>
