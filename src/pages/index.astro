---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

const braums = await getCollection("braum")
---

<script>
  const observer = new IntersectionObserver((entries) =>
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("animate-in-end");
        entry.target.classList.remove("animate-in-start");
      } else {
        entry.target.classList.add("animate-in-start");
        entry.target.classList.remove("animate-in-end");
      }
    })
  );

  document
    .querySelectorAll("[data-animate-in]")
    .forEach((element) => observer.observe(element));
</script>

<Layout title="Only Braums">
	<div class="h-full grid grid-rows-header-footer">
		<header class="container py-4 flex flex-col gap-4">
			<h1 class="font-header text-accent text-4xl">
				Only Braums {"<3"}
			</h1>
			<h2 class="font-header text-black-nearly text-2xl">
				Find your next adventureâ€¦ your next Braum
			</h2>
		</header>

		<main class="container flex flex-col items-center text-black py-8">
			{braums.map((braum, i) => (
				<div
					data-animate-in
					class:list={[
						"flex gap-4",
						i % 2 === 0 ? "flex-col md:flex-row" : "flex-col md:flex-row-reverse",
					]}
				>
					<img
						class="w-48 h-48"
						src={braum.data.image}
						alt={braum.data.name}
					/>
					<div class="flex-[3_3_0%] flex flex-col gap-4">
						<h3 class="font-header text-black-nearly text-2xl">{braum.data.name}</h3>
						<p class="text-xl">
							{braum.data.teaser}
						</p>
						<div class="flex flex-wrap gap-1 font-semibold text-xl">
							{braum.data.tags?.map(tag => (
								<p class="px-3 py-0.5 bg-black-nearly text-white rounded-full">{tag}</p>
							))}	
						</div>
					</div>
				</div>
			))}
		</main>

		<footer class="bg-black-nearly text-accent-light">
			<h2 class="container py-8 font-header text-2xl">That's all the Braums for now, check back frequently for more Braums.</h2>
		</footer>
	</div>
</Layout>
